trimdataVerMay22<-function(dataset, dv, factors=NULL, tr=3, rm=FALSE, min.val=NULL, max.val=NULL) {
  x<-as.data.frame(dataset[, dv])
  colnames(x)<-dv
  nr<-nrow(x)
  nd<-ncol(x)
  if(is.null(factors)) f<-as.factor(rep(1, nr))
  else f<-factor(interaction(dataset[, factors]))
  if(sum(is.na(tr))>0) stop("'tr' cannot be NA")
  if(length(tr)!=nd&length(tr)!=1) stop("The # of values in 'tr' needs to be 1 or equal to the # of dependent variables to be trimmed.")
  if(!is.null(min.val)|!is.null(max.val)){
    if((length(min.val)!=nd&!is.null(min.val))|(length(max.val)!=nd&!is.null(max.val)))
      stop("The number of min.val/max.val should be equal to the number of dependent variables.",
           "Use NA if no extreme values are to be removed from a particular dv.")
      if(is.null(min.val)) min.val<-apply(x, 2, min, na.rm=T)
      else if(is.na(sum(min.val))) min.val[which(is.na(min.val))]<-apply(as.data.frame(x[,which(is.na(min.val))]), 2, min, na.rm=T)
      if(is.null(max.val)) max.val<-apply(x, 2, max, na.rm=T)      
      else if(is.na(sum(max.val))) max.val[which(is.na(max.val))]<-apply(as.data.frame(x[,which(is.na(max.val))]), 2, max, na.rm=T) 
      x<-mapply(function(x, min.val, max.val){ifelse(is.na(x), NA, ifelse(x<min.val|x>max.val, NA, x))}, x, min.val, max.val)
  }
  x=as.data.frame(x)
  crit.lo<-mapply(function(x, tr) {tapply(x, f, function(x) c(mean(x, na.rm=T)-tr*sd(x, na.rm=T)))}, x=x, tr=tr)
  crit.hi<-mapply(function(x, tr) {tapply(x, f, function(x) c(mean(x, na.rm=T)+tr*sd(x, na.rm=T)))}, x=x, tr=tr)  
  if(is.null(dim(crit.lo))){
    crit<-cbind(sapply(c(crit.lo, crit.hi), rep, each=nr))
  } else crit<-cbind(crit.lo, crit.hi)[match(f, rownames(crit.lo)), ]
  rownames(crit)<-1:nr
  x<-cbind(x, crit)
  if(rm) xnew<-mapply(function(x, lo, hi) {ifelse(x>hi|x<lo, NA, x)}, x=x[1:nd], lo=x[(nd+1):(2*nd)], hi=x[(2*nd+1):(3*nd)])
  else xnew<-mapply(function(x, lo, hi) {ifelse(x>hi, hi, ifelse(x<lo, lo, x))}, x=x[1:nd], lo=x[(nd+1):(2*nd)], hi=x[(2*nd+1):(3*nd)])
  colnames(xnew)<-paste(dv, "New", sep="")
  cbind(dataset, xnew)
}
